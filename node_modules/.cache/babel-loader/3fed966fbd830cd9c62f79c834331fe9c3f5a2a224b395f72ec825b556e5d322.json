{"ast":null,"code":"var _jsxFileName = \"/home/aryam/Videos/app/src/Components/Pages/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Camera } from \"./Camera\";\nimport { AllState } from \"../../Context/Context\";\nimport RecentGrid from \"./RecentGrid\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    singleView,\n    setSingleView,\n    fetchAllRecords,\n    recordData\n  } = AllState();\n\n  // const [recentRecords, setRecentRecords] = useState([]);\n\n  // const onPublish = (data) => {\n  //   let d = data.data;\n\n  //   setRecentRecords((prevRecords) => {\n  //     const newRecentRecords = [d, ...prevRecords];\n  //     return newRecentRecords;\n  //   });\n  // };\n\n  // const fetchRecentRecords = async () => {\n  //   try {\n  //     const eventSource = new EventSource(\"https://my-node-server-enfzduml4-aryam-guptas-projects.vercel.app/api\");\n\n  //     eventSource.addEventListener(\"publish\", (event) => {\n  //       try {\n  //         const parsedData = JSON.parse(event.data);\n  //         onPublish(parsedData);\n  //       } catch (error) {\n  //         console.log(\"Failed to parse 'publish' SSE data\", error);\n  //       }\n  //     });\n\n  //     eventSource.onmessage = (event) => {\n  //       try {\n  //         const parsedData = JSON.parse(event.data);\n  //         console.log(\"General message:\", parsedData);\n  //       } catch (error) {\n  //         console.log(\"Failed to parse general SSE data\", error);\n  //       }\n  //     };\n\n  //     eventSource.onerror = (event) => {\n  //       // console.log(\"Error occurred with SSE connection\");\n  //       // console.error(\"SSE error:\", event);\n  //     };\n  //   } catch (error) {\n  //     console.error(\"Error occurred:\", error);\n  //   }\n  // };\n\n  useEffect(() => {\n    // fetchRecentRecords();\n    fetchAllRecords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDashboard\",\n      children: [/*#__PURE__*/_jsxDEV(Camera, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliderMain\",\n        children: recordData && recordData.map(e => {\n          return /*#__PURE__*/_jsxDEV(RecentGrid, {\n            data: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Camera","AllState","RecentGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","singleView","setSingleView","fetchAllRecords","recordData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","e","data","_c","$RefreshReg$"],"sources":["/home/aryam/Videos/app/src/Components/Pages/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Camera } from \"./Camera\";\nimport { AllState } from \"../../Context/Context\";\nimport RecentGrid from \"./RecentGrid\";\n\nconst Dashboard = () => {\n  const { singleView, setSingleView, fetchAllRecords, recordData } = AllState();\n\n  // const [recentRecords, setRecentRecords] = useState([]);\n\n  // const onPublish = (data) => {\n  //   let d = data.data;\n\n  //   setRecentRecords((prevRecords) => {\n  //     const newRecentRecords = [d, ...prevRecords];\n  //     return newRecentRecords;\n  //   });\n  // };\n\n  // const fetchRecentRecords = async () => {\n  //   try {\n  //     const eventSource = new EventSource(\"https://my-node-server-enfzduml4-aryam-guptas-projects.vercel.app/api\");\n\n  //     eventSource.addEventListener(\"publish\", (event) => {\n  //       try {\n  //         const parsedData = JSON.parse(event.data);\n  //         onPublish(parsedData);\n  //       } catch (error) {\n  //         console.log(\"Failed to parse 'publish' SSE data\", error);\n  //       }\n  //     });\n\n  //     eventSource.onmessage = (event) => {\n  //       try {\n  //         const parsedData = JSON.parse(event.data);\n  //         console.log(\"General message:\", parsedData);\n  //       } catch (error) {\n  //         console.log(\"Failed to parse general SSE data\", error);\n  //       }\n  //     };\n\n  //     eventSource.onerror = (event) => {\n  //       // console.log(\"Error occurred with SSE connection\");\n  //       // console.error(\"SSE error:\", event);\n  //     };\n  //   } catch (error) {\n  //     console.error(\"Error occurred:\", error);\n  //   }\n  // };\n\n  useEffect(() => {\n    // fetchRecentRecords();\n    fetchAllRecords();\n  }, []);\n\n  return (\n    <>\n      <div className=\"mainDashboard\">\n        <Camera />\n        <div className=\"sliderMain\">\n          {recordData &&\n            recordData.map((e) => {\n              return <RecentGrid data={e} />;\n            })}\n\n          {/* <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem /> */}\n          {/* {recentRecord.length !== 0 &&\n              recentRecord.map((data) => {\n                return (\n                  <div className=\"sliderCard\" onClick={()=>{\n                    setSingleView(data.rid)\n                  }}>\n                    <img src={data.plot_image} />\n                    <p>\n                      <img src={ocrIcon} />\n                      {data.ocr}\n                    </p>\n                    <p>\n                      <img src={speedIcon} />\n                      {data.speed} KM/Hr\n                    </p>\n                  </div>\n                );\n              })} */}\n        </div>\n      </div>\n      {/* {!singleView ? (\n        \n      ) : (\n        <SingleShow id={singleView} setSingleView={setSingleView} />\n      )} */}\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,UAAU;IAAEC,aAAa;IAAEC,eAAe;IAAEC;EAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC;;EAE7E;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAH,SAAS,CAAC,MAAM;IACd;IACAa,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BT,OAAA,CAACJ,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVd,OAAA;QAAKU,SAAS,EAAC,YAAY;QAAAD,QAAA,EACxBD,UAAU,IACTA,UAAU,CAACO,GAAG,CAAEC,CAAC,IAAK;UACpB,oBAAOhB,OAAA,CAACF,UAAU;YAACmB,IAAI,EAAED;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAChC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA2BD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAMN,CAAC;AAEP,CAAC;AAACV,EAAA,CA9FID,SAAS;AAAAe,EAAA,GAATf,SAAS;AAgGf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}