{"ast":null,"code":"var _jsxFileName = \"/home/aryam/Videos/app/src/Components/Pages/Confriguations/ImageSetting.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { AllState } from \"../../Context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSetting = () => {\n  _s();\n  const {\n    generalANPRSetting,\n    setGeneralANPRSetting,\n    postGenSetting\n  } = AllState();\n  const [editable, setEditable] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CameraMainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"majorLabel\",\n        children: \"Image Save Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"majorInpFeild\",\n        placeholder: \"Enter Image Save Type\",\n        disabled: !editable,\n        value: generalANPRSetting.image_save_type,\n        type: \"number\",\n        style: {\n          maxWidth: \"300px\"\n        },\n        onChange: e => {\n          let newGeneralANPRSetting = {\n            ...generalANPRSetting,\n            image_save_type: e.target.value\n          };\n          setGeneralANPRSetting(newGeneralANPRSetting);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"majorLabel\",\n        style: {\n          marginTop: \"30px\"\n        },\n        children: \"Image Quality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"majorInpFeild\",\n        placeholder: \"Enter Image Quality\",\n        disabled: !editable,\n        value: generalANPRSetting.image_quality,\n        type: \"number\",\n        style: {\n          maxWidth: \"300px\"\n        },\n        onChange: e => {\n          let newGeneralANPRSetting = {\n            ...generalANPRSetting,\n            image_quality: e.target.value\n          };\n          setGeneralANPRSetting(newGeneralANPRSetting);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editCont\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          if (editable) {\n            postGenSetting();\n            setEditable(false);\n          } else {\n            setEditable(true);\n          }\n        },\n        className: \"majorEditBtn\",\n        children: editable ? \"Save\" : \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageSetting, \"v9AOl5wRgpqedlzTwQ7BmtO4/4w=\");\n_c = ImageSetting;\nexport default ImageSetting;\nvar _c;\n$RefreshReg$(_c, \"ImageSetting\");","map":{"version":3,"names":["React","useState","AllState","jsxDEV","_jsxDEV","ImageSetting","_s","generalANPRSetting","setGeneralANPRSetting","postGenSetting","editable","setEditable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","disabled","value","image_save_type","type","style","maxWidth","onChange","e","newGeneralANPRSetting","target","marginTop","image_quality","onClick","_c","$RefreshReg$"],"sources":["/home/aryam/Videos/app/src/Components/Pages/Confriguations/ImageSetting.js"],"sourcesContent":["\nimport React, {  useState } from \"react\";\nimport { AllState } from \"../../Context/Context\";\n\nconst ImageSetting = () => {\n  const {  generalANPRSetting, setGeneralANPRSetting,postGenSetting } = AllState();\n  const [editable, setEditable] = useState(false);\n\n  return (\n    <div className=\"CameraMainDiv\">\n      <div>\n        <label className=\"majorLabel\">Image Save Type</label>\n        <input\n          className=\"majorInpFeild\"\n          placeholder=\"Enter Image Save Type\"\n          disabled={!editable}\n          value={generalANPRSetting.image_save_type}\n          type=\"number\"\n          style={{maxWidth:\"300px\"}}\n          onChange={(e) => {\n            let newGeneralANPRSetting = {...generalANPRSetting,image_save_type:e.target.value}\n            setGeneralANPRSetting(newGeneralANPRSetting)\n          }}\n        />\n        <label className=\"majorLabel\" style={{marginTop:\"30px\"}}>Image Quality</label>\n        <input\n          className=\"majorInpFeild\"\n          placeholder=\"Enter Image Quality\"\n          disabled={!editable}\n          value={generalANPRSetting.image_quality}\n          type=\"number\"\n          style={{maxWidth:\"300px\"}}\n          onChange={(e) => {\n            let newGeneralANPRSetting = {...generalANPRSetting,image_quality:e.target.value}\n            setGeneralANPRSetting(newGeneralANPRSetting)\n          }}\n        />\n      </div>\n\n      <div className=\"editCont\">\n        <button\n          onClick={(e) => {\n            if (editable) {\n              postGenSetting()\n              setEditable(false);\n            } else {\n              setEditable(true);\n            }\n          }}\n          className=\"majorEditBtn\"\n        >\n          {editable ? \"Save\" : \"Edit\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageSetting;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}