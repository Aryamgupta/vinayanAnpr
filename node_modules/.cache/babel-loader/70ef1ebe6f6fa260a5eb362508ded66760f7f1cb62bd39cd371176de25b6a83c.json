{"ast":null,"code":"var _jsxFileName = \"/home/aryam/Videos/app/src/Components/Pages/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { SingleShow } from \"../SingelDataShow/SingleShow\";\nimport { Camera } from \"./Camera\";\nimport { AllState } from \"../../Context/Context\";\nimport RecentGrid from \"./RecentGrid\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    singleView,\n    setSingleView,\n    fetchAllRecentRecord,\n    fetchAllRecords,\n    recordData\n  } = AllState();\n  const [recentRecords, setRecentRecords] = useState([]);\n  const onPublish = data => {\n    let d = data.data;\n    setRecentRecords(prevRecords => {\n      const newRecentRecords = [d, ...prevRecords];\n      return newRecentRecords;\n    });\n  };\n  const fetchRecentRecords = async () => {\n    try {\n      const eventSource = new EventSource(\"https://my-node-server-enfzduml4-aryam-guptas-projects.vercel.app/api\");\n      eventSource.addEventListener(\"publish\", event => {\n        try {\n          const parsedData = JSON.parse(event.data);\n          onPublish(parsedData);\n        } catch (error) {\n          console.log(\"Failed to parse 'publish' SSE data\", error);\n        }\n      });\n      eventSource.onmessage = event => {\n        try {\n          const parsedData = JSON.parse(event.data);\n          console.log(\"General message:\", parsedData);\n        } catch (error) {\n          console.log(\"Failed to parse general SSE data\", error);\n        }\n      };\n      eventSource.onerror = event => {\n        // console.log(\"Error occurred with SSE connection\");\n        // console.error(\"SSE error:\", event);\n      };\n    } catch (error) {\n      console.error(\"Error occurred:\", error);\n    }\n  };\n  useEffect(() => {\n    // fetchRecentRecords();\n    fetchAllRecords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !singleView ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDashboard\",\n      children: [/*#__PURE__*/_jsxDEV(Camera, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliderMain\",\n        children: recordData && recordData.map(e => {\n          return /*#__PURE__*/_jsxDEV(RecentGrid, {\n            data: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SingleShow, {\n      id: singleView,\n      setSingleView: setSingleView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"5m3vKjEek1VsZ8WhdZ8zE3pDi9I=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","SingleShow","Camera","AllState","RecentGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","singleView","setSingleView","fetchAllRecentRecord","fetchAllRecords","recordData","recentRecords","setRecentRecords","onPublish","data","d","prevRecords","newRecentRecords","fetchRecentRecords","eventSource","EventSource","addEventListener","event","parsedData","JSON","parse","error","console","log","onmessage","onerror","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","e","id","_c","$RefreshReg$"],"sources":["/home/aryam/Videos/app/src/Components/Pages/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { SingleShow } from \"../SingelDataShow/SingleShow\";\nimport { Camera } from \"./Camera\";\nimport { AllState } from \"../../Context/Context\";\nimport RecentGrid from \"./RecentGrid\";\n\nconst Dashboard = () => {\n  const {\n    singleView,\n    setSingleView,\n    fetchAllRecentRecord,\n    fetchAllRecords,\n    recordData\n  } = AllState();\n\n\n  const [recentRecords, setRecentRecords] = useState([]);\n\n  const onPublish = (data) => {\n    let d = data.data;\n    \n    setRecentRecords((prevRecords) => {\n      const newRecentRecords = [d, ...prevRecords];\n      return newRecentRecords;\n    });\n  };\n  \n\n  const fetchRecentRecords = async () => {\n    try {\n      const eventSource = new EventSource(\"https://my-node-server-enfzduml4-aryam-guptas-projects.vercel.app/api\");\n\n      eventSource.addEventListener(\"publish\", (event) => {\n        try {\n          const parsedData = JSON.parse(event.data);\n          onPublish(parsedData);\n        } catch (error) {\n          console.log(\"Failed to parse 'publish' SSE data\", error);\n        }\n      });\n\n      eventSource.onmessage = (event) => {\n        try {\n          const parsedData = JSON.parse(event.data);\n          console.log(\"General message:\", parsedData);\n        } catch (error) {\n          console.log(\"Failed to parse general SSE data\", error);\n        }\n      };\n\n      eventSource.onerror = (event) => {\n        // console.log(\"Error occurred with SSE connection\");\n        // console.error(\"SSE error:\", event);\n      };\n    } catch (error) {\n      console.error(\"Error occurred:\", error);\n    }\n  };\n\n  useEffect(() => {\n    // fetchRecentRecords();\n    fetchAllRecords()\n  }, []);\n\n  return (\n    <>\n      {!singleView ? (\n        <div className=\"mainDashboard\">\n          <Camera />\n          <div className=\"sliderMain\">\n            {recordData && recordData.map((e)=>{\n              return <RecentGrid data={e}/>\n            })}\n            \n            {/* <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem /> */}\n            {/* {recentRecord.length !== 0 &&\n              recentRecord.map((data) => {\n                return (\n                  <div className=\"sliderCard\" onClick={()=>{\n                    setSingleView(data.rid)\n                  }}>\n                    <img src={data.plot_image} />\n                    <p>\n                      <img src={ocrIcon} />\n                      {data.ocr}\n                    </p>\n                    <p>\n                      <img src={speedIcon} />\n                      {data.speed} KM/Hr\n                    </p>\n                  </div>\n                );\n              })} */}\n          </div>\n        </div>\n      ) : (\n        <SingleShow id={singleView} setSingleView={setSingleView} />\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}