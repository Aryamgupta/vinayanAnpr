{"ast":null,"code":"import React,{useEffect}from\"react\";import{Camera}from\"./Camera\";import{AllState}from\"../../Context/Context\";import RecentGrid from\"./RecentGrid\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Dashboard=()=>{const{fetchAllRecords,recordData}=AllState();// const [recentRecords, setRecentRecords] = useState([]);\n// const onPublish = (data) => {\n//   let d = data.data;\n//   setRecentRecords((prevRecords) => {\n//     const newRecentRecords = [d, ...prevRecords];\n//     return newRecentRecords;\n//   });\n// };\n// const fetchRecentRecords = async () => {\n//   try {\n//     const eventSource = new EventSource(\"https://my-node-server-enfzduml4-aryam-guptas-projects.vercel.app/api\");\n//     eventSource.addEventListener(\"publish\", (event) => {\n//       try {\n//         const parsedData = JSON.parse(event.data);\n//         onPublish(parsedData);\n//       } catch (error) {\n//         console.log(\"Failed to parse 'publish' SSE data\", error);\n//       }\n//     });\n//     eventSource.onmessage = (event) => {\n//       try {\n//         const parsedData = JSON.parse(event.data);\n//         console.log(\"General message:\", parsedData);\n//       } catch (error) {\n//         console.log(\"Failed to parse general SSE data\", error);\n//       }\n//     };\n//     eventSource.onerror = (event) => {\n//       // console.log(\"Error occurred with SSE connection\");\n//       // console.error(\"SSE error:\", event);\n//     };\n//   } catch (error) {\n//     console.error(\"Error occurred:\", error);\n//   }\n// };\nuseEffect(()=>{// fetchRecentRecords();\nfetchAllRecords();},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"mainDashboard\",children:[/*#__PURE__*/_jsx(Camera,{}),/*#__PURE__*/_jsx(\"div\",{className:\"sliderMain\",children:recordData&&recordData.map(e=>{return/*#__PURE__*/_jsx(RecentGrid,{data:e});})})]})});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","Camera","AllState","RecentGrid","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","fetchAllRecords","recordData","children","className","map","e","data"],"sources":["/home/aryam/Videos/app/src/Components/Pages/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Camera } from \"./Camera\";\nimport { AllState } from \"../../Context/Context\";\nimport RecentGrid from \"./RecentGrid\";\n\nconst Dashboard = () => {\n  const { fetchAllRecords, recordData } = AllState();\n\n  // const [recentRecords, setRecentRecords] = useState([]);\n\n  // const onPublish = (data) => {\n  //   let d = data.data;\n\n  //   setRecentRecords((prevRecords) => {\n  //     const newRecentRecords = [d, ...prevRecords];\n  //     return newRecentRecords;\n  //   });\n  // };\n\n  // const fetchRecentRecords = async () => {\n  //   try {\n  //     const eventSource = new EventSource(\"https://my-node-server-enfzduml4-aryam-guptas-projects.vercel.app/api\");\n\n  //     eventSource.addEventListener(\"publish\", (event) => {\n  //       try {\n  //         const parsedData = JSON.parse(event.data);\n  //         onPublish(parsedData);\n  //       } catch (error) {\n  //         console.log(\"Failed to parse 'publish' SSE data\", error);\n  //       }\n  //     });\n\n  //     eventSource.onmessage = (event) => {\n  //       try {\n  //         const parsedData = JSON.parse(event.data);\n  //         console.log(\"General message:\", parsedData);\n  //       } catch (error) {\n  //         console.log(\"Failed to parse general SSE data\", error);\n  //       }\n  //     };\n\n  //     eventSource.onerror = (event) => {\n  //       // console.log(\"Error occurred with SSE connection\");\n  //       // console.error(\"SSE error:\", event);\n  //     };\n  //   } catch (error) {\n  //     console.error(\"Error occurred:\", error);\n  //   }\n  // };\n\n  useEffect(() => {\n    // fetchRecentRecords();\n    fetchAllRecords();\n  }, []);\n\n  return (\n    <>\n      <div className=\"mainDashboard\">\n        <Camera />\n        <div className=\"sliderMain\">\n          {recordData &&\n            recordData.map((e) => {\n              return <RecentGrid data={e} />;\n            })}\n\n          {/* <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem />\n            <GridItem /> */}\n          {/* {recentRecord.length !== 0 &&\n              recentRecord.map((data) => {\n                return (\n                  <div className=\"sliderCard\" onClick={()=>{\n                    setSingleView(data.rid)\n                  }}>\n                    <img src={data.plot_image} />\n                    <p>\n                      <img src={ocrIcon} />\n                      {data.ocr}\n                    </p>\n                    <p>\n                      <img src={speedIcon} />\n                      {data.speed} KM/Hr\n                    </p>\n                  </div>\n                );\n              })} */}\n        </div>\n      </div>\n      {/* {!singleView ? (\n        \n      ) : (\n        <SingleShow id={singleView} setSingleView={setSingleView} />\n      )} */}\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,MAAM,KAAQ,UAAU,CACjC,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,MAAO,CAAAC,UAAU,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEtC,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAEC,eAAe,CAAEC,UAAW,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAElD;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAF,SAAS,CAAC,IAAM,CACd;AACAW,eAAe,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEN,IAAA,CAAAI,SAAA,EAAAI,QAAA,cACEN,KAAA,QAAKO,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BR,IAAA,CAACJ,MAAM,GAAE,CAAC,cACVI,IAAA,QAAKS,SAAS,CAAC,YAAY,CAAAD,QAAA,CACxBD,UAAU,EACTA,UAAU,CAACG,GAAG,CAAEC,CAAC,EAAK,CACpB,mBAAOX,IAAA,CAACF,UAAU,EAACc,IAAI,CAAED,CAAE,CAAE,CAAC,CAChC,CAAC,CAAC,CA2BD,CAAC,EACH,CAAC,CAMN,CAAC,CAEP,CAAC,CAED,cAAe,CAAAN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}