{"ast":null,"code":"var _jsxFileName = \"/home/aryam/Videos/app/src/Components/Pages/Records/Records.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport fillterIcon from \"./Icons/fillterIcon.png\";\nimport refreshIcon from \"./Icons/refreshIcon.png\";\nimport page1 from \"./Icons/pagination1.png\";\nimport page2 from \"./Icons/pagination2.png\";\nimport { SingleShow } from \"../SingelDataShow/SingleShow\";\nimport { Filter } from \"./Filter/Filter\";\nimport { AllState } from \"../../Context/Context\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Records = () => {\n  _s();\n  const {\n    singleView,\n    fetchAllRecords,\n    currentPage,\n    setCurrentPage,\n    totalPage\n  } = AllState();\n\n  // const [gridView, setGridView] = useState(true);\n  const [isfilter, setIsfilter] = useState(false);\n  // const [pagination, setPagination] = useState(1);\n\n  // const exportFunc = function (e) {\n  //   console.log(e);\n  // };\n\n  useEffect(() => {\n    fetchAllRecords();\n  }, [currentPage]);\n  useEffect(() => {\n    fetchAllRecords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!singleView ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recordsMainDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recordNav\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recordNavLeftPart\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              console.log(isfilter);\n              setIsfilter(true);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: fillterIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), \"Filters\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recordNavRightPart\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paginationDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                if (currentPage == 1) {\n                  return;\n                }\n                setCurrentPage(currentPage - 1);\n              },\n              disabled: currentPage == 1,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: page1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"selectedp\",\n              children: currentPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: totalPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                if (currentPage == totalPage) {\n                  return;\n                }\n                setCurrentPage(currentPage + 1);\n              },\n              disabled: currentPage == totalPage,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: page2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              fetchAllRecords();\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: refreshIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), \" Refresh\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SingleShow, {\n      id: singleView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), isfilter && /*#__PURE__*/_jsxDEV(Filter, {\n      setIsfilter: setIsfilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n_s(Records, \"16LxVGZzwVZFiV5OnwWKI8gxKgo=\");\n_c = Records;\nexport default Records;\nvar _c;\n$RefreshReg$(_c, \"Records\");","map":{"version":3,"names":["React","useEffect","useState","fillterIcon","refreshIcon","page1","page2","SingleShow","Filter","AllState","jsxDEV","_jsxDEV","Fragment","_Fragment","Records","_s","singleView","fetchAllRecords","currentPage","setCurrentPage","totalPage","isfilter","setIsfilter","children","className","onClick","e","console","log","src","fileName","_jsxFileName","lineNumber","columnNumber","disabled","id","_c","$RefreshReg$"],"sources":["/home/aryam/Videos/app/src/Components/Pages/Records/Records.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport fillterIcon from \"./Icons/fillterIcon.png\";\nimport refreshIcon from \"./Icons/refreshIcon.png\";\nimport page1 from \"./Icons/pagination1.png\";\nimport page2 from \"./Icons/pagination2.png\";\nimport { SingleShow } from \"../SingelDataShow/SingleShow\";\nimport { Filter } from \"./Filter/Filter\";\nimport { AllState } from \"../../Context/Context\";\n\nconst Records = () => {\n  \n  const {\n    singleView,\n    fetchAllRecords,\n    currentPage, setCurrentPage,totalPage\n  } = AllState();\n\n  // const [gridView, setGridView] = useState(true);\n  const [isfilter, setIsfilter] = useState(false);\n  // const [pagination, setPagination] = useState(1);\n\n  // const exportFunc = function (e) {\n  //   console.log(e);\n  // };\n\n\n \n  useEffect(() => {\n    fetchAllRecords();\n  }, [currentPage]);\n\n \n  useEffect(() => {\n    fetchAllRecords();\n  }, []);\n  \n\n  return (\n    <>\n      {!singleView ? (\n        <div className=\"recordsMainDiv\">\n          <div className=\"recordNav\">\n            <div className=\"recordNavLeftPart\">\n              {/* <div\n                onClick={(e) => {\n                  setGridView(!gridView);\n                }}\n                style={{\n                  transition: \"all 0.5s ease\",\n                }}\n              >\n                {gridView ? <img src={listV} /> : <img src={gridV} />}\n              </div> */}\n              <button\n                onClick={(e) => {\n                  console.log(isfilter);\n                  setIsfilter(true);\n                }}\n              >\n                <img src={fillterIcon} />\n                Filters\n              </button>\n              \n              {/* <button\n                onClick={(e) => {\n                  exportFunc(e);\n                }}\n              >\n                Export\n                <img src={exportIcon} />\n              </button> */}\n            </div>\n            <div className=\"recordNavRightPart\">\n              <div className=\"paginationDiv\">\n                <button\n                  onClick={(e) => {\n                    if(currentPage == 1){\n                      return ;\n                    }\n                    setCurrentPage(currentPage-1);\n                  }}\n                  disabled={currentPage== 1}\n                >\n                  <img src={page1} />\n                </button>\n                <p className=\"selectedp\">{currentPage}</p>\n                <p>/</p>\n                <p>{totalPage}</p>\n                <button\n                  onClick={(e) => {\n                    if(currentPage == totalPage){\n                      return;\n                    }\n                    setCurrentPage(currentPage+1);\n                  }}\n                  disabled={currentPage == totalPage}\n                >\n                  <img src={page2} />\n                </button>\n              </div>\n              <button onClick={()=>{fetchAllRecords()}}>\n                {\" \"}\n                <img src={refreshIcon} /> Refresh\n              </button>\n            </div>\n          </div>\n          {/* {!gridView ? <Table /> : <Grid />} */}\n        </div>\n      ) : (\n        <SingleShow id={singleView} />\n      )}\n      {isfilter && <Filter setIsfilter={setIsfilter} />}\n    </>\n  );\n};\n\nexport default Records;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}